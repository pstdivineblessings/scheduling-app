version: '3'

services:

  mysql-db:
    container_name: mysql
    platform: linux/x86_64
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    # env_file: ./.env
    environment:  
      # MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      # MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: Admin@22
      MYSQL_DATABASE: scheduling_db
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_PORT}"
      # - "3306:3306"
    volumes:
      - mysql-db-data:/var/lib/mysql
    networks:
      - app-network      

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    env_file: ./.env
    environment:
      ADMINER_DEFAULT_SERVER: mysql-db
    ports:
      - "${ADMINER_HOST_PORT}:${ADMINER_PORT}"
    depends_on:
      - mysql-db      
    networks:
      - app-network        

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs-server
    container_name: nodejs-app
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "${HOST_PORT}:${PORT}"
    volumes:
      - .:/usr/src/node-app
      - node_modules:/usr/src/node-app/node_modules
    networks:
      - app-network
    depends_on:
      - mysql-db      
    # command: ./wait-for.sh mysql-db:$MYSQL_PORT -- yarn dev -L
    command: ./wait-for.sh mysql-db:3306 -- yarn dev -L
    # command: yarn dev

 
networks:
  app-network:
    driver: bridge

volumes:
  mysql-db-data:
  node_modules:  